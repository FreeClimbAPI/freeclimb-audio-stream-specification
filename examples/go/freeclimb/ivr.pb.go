//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//@@
//@@ A gRPC Interface for bidirectional streaming of IVR data between
//@@ Freeclimb platform and a given application instance.
//@@
//@@ FC serves as the gRPC client, the application as the gRPC server.
//@@
//@@ Upon receipt of a phone call, FC will invoke the bidirectional
//@@ streaming RPC and proceed to asynchornously send to application:
//@@     (1) notification that call has started
//@@     (2) notification of real-time audio stream data from the call
//@@     (3) notification of start of DTMF keypress detected on the call
//@@     (4) notification of end of DTMF keypress detected on the call
//@@     (5) notification that requested audio playback has started
//@@     (6) notification that requested audio playback has completed
//@@     (7) notification that the audio buffer has been cleared
//@@     (8) notification that requested DTMF keypress has started
//@@     (9) notification that requested DTMF keypress has completed
//@@     (10) notification that the call has ended
//@@     (11) notification that an error has occurred
//@@     (10) notification of the depth of the queried buffer
//@@
//@@ Application is then free to stream back to FC:
//@@     (1) instruction to play audio to call
//@@     (2) instruction to clear contents of audio buffer
//@@     (3) instruction to press DTMF digit to call
//@@     (4) instruction to disconnect call
//@@     (5) instruction to terminate Audio Stream and return to PerCL
//@@     (6) instruction to query audio and dtmf buffers
//@@
//@@ References:
//@@     * https://developers.google.com/protocol-buffers/docs/proto3
//@@
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: ivr.proto

package ivr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlatformMessage_NotifyBufferDepthMessage_BufferType int32

const (
	PlatformMessage_NotifyBufferDepthMessage_DTMF  PlatformMessage_NotifyBufferDepthMessage_BufferType = 0
	PlatformMessage_NotifyBufferDepthMessage_Audio PlatformMessage_NotifyBufferDepthMessage_BufferType = 1
)

// Enum value maps for PlatformMessage_NotifyBufferDepthMessage_BufferType.
var (
	PlatformMessage_NotifyBufferDepthMessage_BufferType_name = map[int32]string{
		0: "DTMF",
		1: "Audio",
	}
	PlatformMessage_NotifyBufferDepthMessage_BufferType_value = map[string]int32{
		"DTMF":  0,
		"Audio": 1,
	}
)

func (x PlatformMessage_NotifyBufferDepthMessage_BufferType) Enum() *PlatformMessage_NotifyBufferDepthMessage_BufferType {
	p := new(PlatformMessage_NotifyBufferDepthMessage_BufferType)
	*p = x
	return p
}

func (x PlatformMessage_NotifyBufferDepthMessage_BufferType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformMessage_NotifyBufferDepthMessage_BufferType) Descriptor() protoreflect.EnumDescriptor {
	return file_ivr_proto_enumTypes[0].Descriptor()
}

func (PlatformMessage_NotifyBufferDepthMessage_BufferType) Type() protoreflect.EnumType {
	return &file_ivr_proto_enumTypes[0]
}

func (x PlatformMessage_NotifyBufferDepthMessage_BufferType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformMessage_NotifyBufferDepthMessage_BufferType.Descriptor instead.
func (PlatformMessage_NotifyBufferDepthMessage_BufferType) EnumDescriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 4, 0}
}

type PlatformMessage_NotifyCallEndedMessage_ReasonCode int32

const (
	PlatformMessage_NotifyCallEndedMessage_CALLER_DISCONNECT      PlatformMessage_NotifyCallEndedMessage_ReasonCode = 0
	PlatformMessage_NotifyCallEndedMessage_APPLICATION_DISCONNECT PlatformMessage_NotifyCallEndedMessage_ReasonCode = 1
	PlatformMessage_NotifyCallEndedMessage_PLATFORM_DISCONNECT    PlatformMessage_NotifyCallEndedMessage_ReasonCode = 2
	PlatformMessage_NotifyCallEndedMessage_PLATFORM_ERROR         PlatformMessage_NotifyCallEndedMessage_ReasonCode = 3
)

// Enum value maps for PlatformMessage_NotifyCallEndedMessage_ReasonCode.
var (
	PlatformMessage_NotifyCallEndedMessage_ReasonCode_name = map[int32]string{
		0: "CALLER_DISCONNECT",
		1: "APPLICATION_DISCONNECT",
		2: "PLATFORM_DISCONNECT",
		3: "PLATFORM_ERROR",
	}
	PlatformMessage_NotifyCallEndedMessage_ReasonCode_value = map[string]int32{
		"CALLER_DISCONNECT":      0,
		"APPLICATION_DISCONNECT": 1,
		"PLATFORM_DISCONNECT":    2,
		"PLATFORM_ERROR":         3,
	}
)

func (x PlatformMessage_NotifyCallEndedMessage_ReasonCode) Enum() *PlatformMessage_NotifyCallEndedMessage_ReasonCode {
	p := new(PlatformMessage_NotifyCallEndedMessage_ReasonCode)
	*p = x
	return p
}

func (x PlatformMessage_NotifyCallEndedMessage_ReasonCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformMessage_NotifyCallEndedMessage_ReasonCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ivr_proto_enumTypes[1].Descriptor()
}

func (PlatformMessage_NotifyCallEndedMessage_ReasonCode) Type() protoreflect.EnumType {
	return &file_ivr_proto_enumTypes[1]
}

func (x PlatformMessage_NotifyCallEndedMessage_ReasonCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformMessage_NotifyCallEndedMessage_ReasonCode.Descriptor instead.
func (PlatformMessage_NotifyCallEndedMessage_ReasonCode) EnumDescriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 5, 0}
}

type AppMessage_QueryBufferDepthMessage_BufferType int32

const (
	AppMessage_QueryBufferDepthMessage_DTMF  AppMessage_QueryBufferDepthMessage_BufferType = 0
	AppMessage_QueryBufferDepthMessage_Audio AppMessage_QueryBufferDepthMessage_BufferType = 1
)

// Enum value maps for AppMessage_QueryBufferDepthMessage_BufferType.
var (
	AppMessage_QueryBufferDepthMessage_BufferType_name = map[int32]string{
		0: "DTMF",
		1: "Audio",
	}
	AppMessage_QueryBufferDepthMessage_BufferType_value = map[string]int32{
		"DTMF":  0,
		"Audio": 1,
	}
)

func (x AppMessage_QueryBufferDepthMessage_BufferType) Enum() *AppMessage_QueryBufferDepthMessage_BufferType {
	p := new(AppMessage_QueryBufferDepthMessage_BufferType)
	*p = x
	return p
}

func (x AppMessage_QueryBufferDepthMessage_BufferType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppMessage_QueryBufferDepthMessage_BufferType) Descriptor() protoreflect.EnumDescriptor {
	return file_ivr_proto_enumTypes[2].Descriptor()
}

func (AppMessage_QueryBufferDepthMessage_BufferType) Type() protoreflect.EnumType {
	return &file_ivr_proto_enumTypes[2]
}

func (x AppMessage_QueryBufferDepthMessage_BufferType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppMessage_QueryBufferDepthMessage_BufferType.Descriptor instead.
func (AppMessage_QueryBufferDepthMessage_BufferType) EnumDescriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 3, 0}
}

// @@
// @@ Message definitions for messages from Freeclimb platform --> application
// @@
type PlatformMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*PlatformMessage_NotifyCallStarted
	//	*PlatformMessage_NotifyAudioData
	//	*PlatformMessage_NotifyDtmfReceivedStartData
	//	*PlatformMessage_NotifyDtmfReceivedEndData
	//	*PlatformMessage_NotifyPlaybackStartedData
	//	*PlatformMessage_NotifyPlaybackCompletedData
	//	*PlatformMessage_NotifyAudioClearedData
	//	*PlatformMessage_NotifyDtmfPlayStartedData
	//	*PlatformMessage_NotifyDtmfPlayCompletedData
	//	*PlatformMessage_NotifyCallEnded
	//	*PlatformMessage_NotifyError
	//	*PlatformMessage_NotifyBuffer
	Payload       isPlatformMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage) Reset() {
	*x = PlatformMessage{}
	mi := &file_ivr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage) ProtoMessage() {}

func (x *PlatformMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0}
}

func (x *PlatformMessage) GetPayload() isPlatformMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PlatformMessage) GetNotifyCallStarted() *PlatformMessage_NotifyCallStartedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyCallStarted); ok {
			return x.NotifyCallStarted
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyAudioData() *PlatformMessage_NotifyAudioMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyAudioData); ok {
			return x.NotifyAudioData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyDtmfReceivedStartData() *PlatformMessage_NotifyDTMFReceivedStartedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyDtmfReceivedStartData); ok {
			return x.NotifyDtmfReceivedStartData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyDtmfReceivedEndData() *PlatformMessage_NotifyDTMFReceivedEndedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyDtmfReceivedEndData); ok {
			return x.NotifyDtmfReceivedEndData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyPlaybackStartedData() *PlatformMessage_NotifyAudioPlaybackStartedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyPlaybackStartedData); ok {
			return x.NotifyPlaybackStartedData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyPlaybackCompletedData() *PlatformMessage_NotifyAudioPlaybackCompletedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyPlaybackCompletedData); ok {
			return x.NotifyPlaybackCompletedData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyAudioClearedData() *PlatformMessage_NotifyAudioBufferClearedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyAudioClearedData); ok {
			return x.NotifyAudioClearedData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyDtmfPlayStartedData() *PlatformMessage_NotifyDTMFPlayStartedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyDtmfPlayStartedData); ok {
			return x.NotifyDtmfPlayStartedData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyDtmfPlayCompletedData() *PlatformMessage_NotifyDTMFPlayCompletedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyDtmfPlayCompletedData); ok {
			return x.NotifyDtmfPlayCompletedData
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyCallEnded() *PlatformMessage_NotifyCallEndedMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyCallEnded); ok {
			return x.NotifyCallEnded
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyError() *PlatformMessage_NotifyErrorMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyError); ok {
			return x.NotifyError
		}
	}
	return nil
}

func (x *PlatformMessage) GetNotifyBuffer() *PlatformMessage_NotifyBufferDepthMessage {
	if x != nil {
		if x, ok := x.Payload.(*PlatformMessage_NotifyBuffer); ok {
			return x.NotifyBuffer
		}
	}
	return nil
}

type isPlatformMessage_Payload interface {
	isPlatformMessage_Payload()
}

type PlatformMessage_NotifyCallStarted struct {
	NotifyCallStarted *PlatformMessage_NotifyCallStartedMessage `protobuf:"bytes,1,opt,name=notify_call_started,json=notifyCallStarted,proto3,oneof"`
}

type PlatformMessage_NotifyAudioData struct {
	NotifyAudioData *PlatformMessage_NotifyAudioMessage `protobuf:"bytes,2,opt,name=notify_audio_data,json=notifyAudioData,proto3,oneof"`
}

type PlatformMessage_NotifyDtmfReceivedStartData struct {
	NotifyDtmfReceivedStartData *PlatformMessage_NotifyDTMFReceivedStartedMessage `protobuf:"bytes,3,opt,name=notify_dtmf_received_start_data,json=notifyDtmfReceivedStartData,proto3,oneof"`
}

type PlatformMessage_NotifyDtmfReceivedEndData struct {
	NotifyDtmfReceivedEndData *PlatformMessage_NotifyDTMFReceivedEndedMessage `protobuf:"bytes,4,opt,name=notify_dtmf_received_end_data,json=notifyDtmfReceivedEndData,proto3,oneof"`
}

type PlatformMessage_NotifyPlaybackStartedData struct {
	NotifyPlaybackStartedData *PlatformMessage_NotifyAudioPlaybackStartedMessage `protobuf:"bytes,5,opt,name=notify_playback_started_data,json=notifyPlaybackStartedData,proto3,oneof"`
}

type PlatformMessage_NotifyPlaybackCompletedData struct {
	NotifyPlaybackCompletedData *PlatformMessage_NotifyAudioPlaybackCompletedMessage `protobuf:"bytes,6,opt,name=notify_playback_completed_data,json=notifyPlaybackCompletedData,proto3,oneof"`
}

type PlatformMessage_NotifyAudioClearedData struct {
	NotifyAudioClearedData *PlatformMessage_NotifyAudioBufferClearedMessage `protobuf:"bytes,7,opt,name=notify_audio_cleared_data,json=notifyAudioClearedData,proto3,oneof"`
}

type PlatformMessage_NotifyDtmfPlayStartedData struct {
	NotifyDtmfPlayStartedData *PlatformMessage_NotifyDTMFPlayStartedMessage `protobuf:"bytes,8,opt,name=notify_dtmf_play_started_data,json=notifyDtmfPlayStartedData,proto3,oneof"`
}

type PlatformMessage_NotifyDtmfPlayCompletedData struct {
	NotifyDtmfPlayCompletedData *PlatformMessage_NotifyDTMFPlayCompletedMessage `protobuf:"bytes,9,opt,name=notify_dtmf_play_completed_data,json=notifyDtmfPlayCompletedData,proto3,oneof"`
}

type PlatformMessage_NotifyCallEnded struct {
	NotifyCallEnded *PlatformMessage_NotifyCallEndedMessage `protobuf:"bytes,10,opt,name=notify_call_ended,json=notifyCallEnded,proto3,oneof"`
}

type PlatformMessage_NotifyError struct {
	NotifyError *PlatformMessage_NotifyErrorMessage `protobuf:"bytes,11,opt,name=notify_error,json=notifyError,proto3,oneof"`
}

type PlatformMessage_NotifyBuffer struct {
	NotifyBuffer *PlatformMessage_NotifyBufferDepthMessage `protobuf:"bytes,12,opt,name=notify_buffer,json=notifyBuffer,proto3,oneof"`
}

func (*PlatformMessage_NotifyCallStarted) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyAudioData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyDtmfReceivedStartData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyDtmfReceivedEndData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyPlaybackStartedData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyPlaybackCompletedData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyAudioClearedData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyDtmfPlayStartedData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyDtmfPlayCompletedData) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyCallEnded) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyError) isPlatformMessage_Payload() {}

func (*PlatformMessage_NotifyBuffer) isPlatformMessage_Payload() {}

// @@
// @@ Message definitions for messages from application --> Freeclimb platform
// @@
type AppMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*AppMessage_AudioData
	//	*AppMessage_ClearAudioBuffer
	//	*AppMessage_DtmfData
	//	*AppMessage_TerminateCall
	//	*AppMessage_EndStream
	//	*AppMessage_QueryBuffer
	Payload       isAppMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage) Reset() {
	*x = AppMessage{}
	mi := &file_ivr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage) ProtoMessage() {}

func (x *AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage.ProtoReflect.Descriptor instead.
func (*AppMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1}
}

func (x *AppMessage) GetPayload() isAppMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AppMessage) GetAudioData() *AppMessage_PlayAudioMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *AppMessage) GetClearAudioBuffer() *AppMessage_ClearAudioBufferMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_ClearAudioBuffer); ok {
			return x.ClearAudioBuffer
		}
	}
	return nil
}

func (x *AppMessage) GetDtmfData() *AppMessage_PressDTMFMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_DtmfData); ok {
			return x.DtmfData
		}
	}
	return nil
}

func (x *AppMessage) GetTerminateCall() *AppMessage_TerminateCallMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_TerminateCall); ok {
			return x.TerminateCall
		}
	}
	return nil
}

func (x *AppMessage) GetEndStream() *AppMessage_EndGrpcStreamMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_EndStream); ok {
			return x.EndStream
		}
	}
	return nil
}

func (x *AppMessage) GetQueryBuffer() *AppMessage_QueryBufferDepthMessage {
	if x != nil {
		if x, ok := x.Payload.(*AppMessage_QueryBuffer); ok {
			return x.QueryBuffer
		}
	}
	return nil
}

type isAppMessage_Payload interface {
	isAppMessage_Payload()
}

type AppMessage_AudioData struct {
	AudioData *AppMessage_PlayAudioMessage `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3,oneof"`
}

type AppMessage_ClearAudioBuffer struct {
	ClearAudioBuffer *AppMessage_ClearAudioBufferMessage `protobuf:"bytes,2,opt,name=clear_audio_buffer,json=clearAudioBuffer,proto3,oneof"`
}

type AppMessage_DtmfData struct {
	DtmfData *AppMessage_PressDTMFMessage `protobuf:"bytes,3,opt,name=dtmf_data,json=dtmfData,proto3,oneof"`
}

type AppMessage_TerminateCall struct {
	TerminateCall *AppMessage_TerminateCallMessage `protobuf:"bytes,4,opt,name=terminate_call,json=terminateCall,proto3,oneof"`
}

type AppMessage_EndStream struct {
	EndStream *AppMessage_EndGrpcStreamMessage `protobuf:"bytes,5,opt,name=end_stream,json=endStream,proto3,oneof"`
}

type AppMessage_QueryBuffer struct {
	QueryBuffer *AppMessage_QueryBufferDepthMessage `protobuf:"bytes,6,opt,name=query_buffer,json=queryBuffer,proto3,oneof"`
}

func (*AppMessage_AudioData) isAppMessage_Payload() {}

func (*AppMessage_ClearAudioBuffer) isAppMessage_Payload() {}

func (*AppMessage_DtmfData) isAppMessage_Payload() {}

func (*AppMessage_TerminateCall) isAppMessage_Payload() {}

func (*AppMessage_EndStream) isAppMessage_Payload() {}

func (*AppMessage_QueryBuffer) isAppMessage_Payload() {}

// @@ FC will initiate the bidirectional RPC stream and this will be
// @@ the first request message from FC to application to kick things off
type PlatformMessage_NotifyCallStartedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ SIP call ID for the call
	CallId string `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// @@ SIP To:
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// @@ SIP From:
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// @@ "true" for inbound call, "false" for outbound
	IsInbound bool `protobuf:"varint,4,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"`
	// @@ string(s) containing additional metadata about the call
	Metadata []string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// @@ string containg content type which will remain constant throughout call
	ContentType   string `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyCallStartedMessage) Reset() {
	*x = PlatformMessage_NotifyCallStartedMessage{}
	mi := &file_ivr_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyCallStartedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyCallStartedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyCallStartedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyCallStartedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyCallStartedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetMetadata() []string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PlatformMessage_NotifyCallStartedMessage) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// @@ FC will send a stream of these messages to the application in order
// @@ to deliver a real-time audio feed from the call over this stream
// @@ FC will send audio messages in the format specified in the AudioStream
// @@ PERCL command (one of `audio/l16;rate=8000`, `audio/mulaw;rate=8000`, `audio/l16;rate=16000`)
// @@ audio/l16;rate=8000    = 320 bytes
// @@ audio/mulaw;rate=8000  = 160 bytes
// @@ audio/l16;rate=16000   = 640 bytes
type PlatformMessage_NotifyAudioMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AudioData []byte                 `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	// @@ removing from api as content_type is set at the call level
	// @@ string content_type = 2;
	StartTstamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_tstamp,json=startTstamp,proto3" json:"start_tstamp,omitempty"`
	EndTstamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_tstamp,json=endTstamp,proto3" json:"end_tstamp,omitempty"`
	// @@ removing from api as this is unnecessary as the size is known
	// @@ from the audio_data
	// @@ uint32 size_bytes = 5;
	SequenceNum   uint32 `protobuf:"varint,6,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyAudioMessage) Reset() {
	*x = PlatformMessage_NotifyAudioMessage{}
	mi := &file_ivr_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyAudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyAudioMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyAudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyAudioMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyAudioMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PlatformMessage_NotifyAudioMessage) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *PlatformMessage_NotifyAudioMessage) GetStartTstamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTstamp
	}
	return nil
}

func (x *PlatformMessage_NotifyAudioMessage) GetEndTstamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTstamp
	}
	return nil
}

func (x *PlatformMessage_NotifyAudioMessage) GetSequenceNum() uint32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

// @@ FC will send one of these messages to application upon detecting
// @@ the start of a DTMF keypress on the call
type PlatformMessage_NotifyDTMFReceivedStartedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digit         string                 `protobuf:"bytes,1,opt,name=digit,proto3" json:"digit,omitempty"`
	StartTstamp   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_tstamp,json=startTstamp,proto3" json:"start_tstamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyDTMFReceivedStartedMessage) Reset() {
	*x = PlatformMessage_NotifyDTMFReceivedStartedMessage{}
	mi := &file_ivr_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyDTMFReceivedStartedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyDTMFReceivedStartedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyDTMFReceivedStartedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyDTMFReceivedStartedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyDTMFReceivedStartedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PlatformMessage_NotifyDTMFReceivedStartedMessage) GetDigit() string {
	if x != nil {
		return x.Digit
	}
	return ""
}

func (x *PlatformMessage_NotifyDTMFReceivedStartedMessage) GetStartTstamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTstamp
	}
	return nil
}

// @@ FC will send one of these messages to application upon detecting
// @@ the end of a DTMF keypress on the call
type PlatformMessage_NotifyDTMFReceivedEndedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digit         string                 `protobuf:"bytes,1,opt,name=digit,proto3" json:"digit,omitempty"`
	EndTstamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_tstamp,json=endTstamp,proto3" json:"end_tstamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyDTMFReceivedEndedMessage) Reset() {
	*x = PlatformMessage_NotifyDTMFReceivedEndedMessage{}
	mi := &file_ivr_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyDTMFReceivedEndedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyDTMFReceivedEndedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyDTMFReceivedEndedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyDTMFReceivedEndedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyDTMFReceivedEndedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 3}
}

func (x *PlatformMessage_NotifyDTMFReceivedEndedMessage) GetDigit() string {
	if x != nil {
		return x.Digit
	}
	return ""
}

func (x *PlatformMessage_NotifyDTMFReceivedEndedMessage) GetEndTstamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTstamp
	}
	return nil
}

type PlatformMessage_NotifyBufferDepthMessage struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	BufferType    PlatformMessage_NotifyBufferDepthMessage_BufferType `protobuf:"varint,1,opt,name=buffer_type,json=bufferType,proto3,enum=freeclimb.PlatformMessage_NotifyBufferDepthMessage_BufferType" json:"buffer_type,omitempty"`
	Depth         uint32                                              `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	BufferSize    uint32                                              `protobuf:"varint,3,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyBufferDepthMessage) Reset() {
	*x = PlatformMessage_NotifyBufferDepthMessage{}
	mi := &file_ivr_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyBufferDepthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyBufferDepthMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyBufferDepthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyBufferDepthMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyBufferDepthMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 4}
}

func (x *PlatformMessage_NotifyBufferDepthMessage) GetBufferType() PlatformMessage_NotifyBufferDepthMessage_BufferType {
	if x != nil {
		return x.BufferType
	}
	return PlatformMessage_NotifyBufferDepthMessage_DTMF
}

func (x *PlatformMessage_NotifyBufferDepthMessage) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *PlatformMessage_NotifyBufferDepthMessage) GetBufferSize() uint32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

// @@ FC will send one of these messages to application upon detecting
// @@ call termination
type PlatformMessage_NotifyCallEndedMessage struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	CallId string                 `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	// @@ A reason_code for call termination
	ReasonCode PlatformMessage_NotifyCallEndedMessage_ReasonCode `protobuf:"varint,2,opt,name=reason_code,json=reasonCode,proto3,enum=freeclimb.PlatformMessage_NotifyCallEndedMessage_ReasonCode" json:"reason_code,omitempty"`
	// @@ A descriptive string to complement the reason_code
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyCallEndedMessage) Reset() {
	*x = PlatformMessage_NotifyCallEndedMessage{}
	mi := &file_ivr_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyCallEndedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyCallEndedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyCallEndedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyCallEndedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyCallEndedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 5}
}

func (x *PlatformMessage_NotifyCallEndedMessage) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *PlatformMessage_NotifyCallEndedMessage) GetReasonCode() PlatformMessage_NotifyCallEndedMessage_ReasonCode {
	if x != nil {
		return x.ReasonCode
	}
	return PlatformMessage_NotifyCallEndedMessage_CALLER_DISCONNECT
}

func (x *PlatformMessage_NotifyCallEndedMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// @@ FC will send one of these messages to application upon starting
// @@ to process a prior AppMessage::PlayAudioMessage response received
// @@ from the application earlier in the stream
type PlatformMessage_NotifyAudioPlaybackStartedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ id here is the unique id generated and passed in by the
	// @@ application in a prior AppMessage::PlayAudioMessage response
	// @@ back to FC on this RPC stream
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyAudioPlaybackStartedMessage) Reset() {
	*x = PlatformMessage_NotifyAudioPlaybackStartedMessage{}
	mi := &file_ivr_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyAudioPlaybackStartedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyAudioPlaybackStartedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyAudioPlaybackStartedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyAudioPlaybackStartedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyAudioPlaybackStartedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 6}
}

func (x *PlatformMessage_NotifyAudioPlaybackStartedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlatformMessage_NotifyAudioPlaybackStartedMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// @@ FC will send one of these messages to application upon completing
// @@ playback of audio for a prior AppMessage::PlayAudioMessage
// @@ response received from the application earlier in the stream
type PlatformMessage_NotifyAudioPlaybackCompletedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ id here is the unique id generated and passed in by the
	// @@ application in a prior AppMessage::PlayAudioMessage response
	// @@ back to FC on this RPC stream
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyAudioPlaybackCompletedMessage) Reset() {
	*x = PlatformMessage_NotifyAudioPlaybackCompletedMessage{}
	mi := &file_ivr_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyAudioPlaybackCompletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyAudioPlaybackCompletedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyAudioPlaybackCompletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyAudioPlaybackCompletedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyAudioPlaybackCompletedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 7}
}

func (x *PlatformMessage_NotifyAudioPlaybackCompletedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlatformMessage_NotifyAudioPlaybackCompletedMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// @@ FC will send one of these messages to application upon completing
// @@ the clearing of the current audio buffer contents in response
// @@ to receiving a ClearAudioBufferMessage from application
type PlatformMessage_NotifyAudioBufferClearedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ this request will echo back the unique id generated by the
	// @@ application and passed to FC in a prior ClearAudioBufferMessage
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyAudioBufferClearedMessage) Reset() {
	*x = PlatformMessage_NotifyAudioBufferClearedMessage{}
	mi := &file_ivr_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyAudioBufferClearedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyAudioBufferClearedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyAudioBufferClearedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyAudioBufferClearedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyAudioBufferClearedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 8}
}

func (x *PlatformMessage_NotifyAudioBufferClearedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlatformMessage_NotifyAudioBufferClearedMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// @@ FC will send one of these messages to application upon starting
// @@ to play the current DTMF buffer contents
type PlatformMessage_NotifyDTMFPlayStartedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ id here is the unique id generated and passed in by the
	// @@ application in a prior AppMessage::PressDTMFMessage response
	// @@ back to FC on this RPC stream
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyDTMFPlayStartedMessage) Reset() {
	*x = PlatformMessage_NotifyDTMFPlayStartedMessage{}
	mi := &file_ivr_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyDTMFPlayStartedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyDTMFPlayStartedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyDTMFPlayStartedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyDTMFPlayStartedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyDTMFPlayStartedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 9}
}

func (x *PlatformMessage_NotifyDTMFPlayStartedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlatformMessage_NotifyDTMFPlayStartedMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// @@ FC will send one of these messages to application upon completing
// @@ a DTMF keypress request for a prior AppMessage::PressDTMFMessage
// @@ response back to FC on this RPC stream
type PlatformMessage_NotifyDTMFPlayCompletedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @@ id here is the unique id generated and passed in by the
	// @@ application in a prior AppMessage::PressDTMFMessage response
	// @@ back to FC on this RPC stream
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyDTMFPlayCompletedMessage) Reset() {
	*x = PlatformMessage_NotifyDTMFPlayCompletedMessage{}
	mi := &file_ivr_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyDTMFPlayCompletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyDTMFPlayCompletedMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyDTMFPlayCompletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyDTMFPlayCompletedMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyDTMFPlayCompletedMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 10}
}

func (x *PlatformMessage_NotifyDTMFPlayCompletedMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlatformMessage_NotifyDTMFPlayCompletedMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type PlatformMessage_NotifyErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage  string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorId       string                 `protobuf:"bytes,2,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformMessage_NotifyErrorMessage) Reset() {
	*x = PlatformMessage_NotifyErrorMessage{}
	mi := &file_ivr_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMessage_NotifyErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMessage_NotifyErrorMessage) ProtoMessage() {}

func (x *PlatformMessage_NotifyErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMessage_NotifyErrorMessage.ProtoReflect.Descriptor instead.
func (*PlatformMessage_NotifyErrorMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{0, 11}
}

func (x *PlatformMessage_NotifyErrorMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *PlatformMessage_NotifyErrorMessage) GetErrorId() string {
	if x != nil {
		return x.ErrorId
	}
	return ""
}

// @@ Response back to FC from application instructing FC to play
// @@ audio to the call; the application generated unique id passed
// @@ in will be echoed back to application from FC in subsequent
// @@ NotifyAudioPlayback[Started|Ended]Message requests to the
// @@ application on this RPC stream
// @@
// @@ This must be the same sample rate as defined in the inital PerCL message
// @@ which establishes the AudioStream, transcoding can occur between l16 and mulaw
type AppMessage_PlayAudioMessage struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AudioData   []byte                 `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	ContentType string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// @@uint32 size_bytes = 4;
	SequenceNum   uint32 `protobuf:"varint,5,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	LastMessage   bool   `protobuf:"varint,6,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage_PlayAudioMessage) Reset() {
	*x = AppMessage_PlayAudioMessage{}
	mi := &file_ivr_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_PlayAudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_PlayAudioMessage) ProtoMessage() {}

func (x *AppMessage_PlayAudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_PlayAudioMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_PlayAudioMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AppMessage_PlayAudioMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppMessage_PlayAudioMessage) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *AppMessage_PlayAudioMessage) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AppMessage_PlayAudioMessage) GetSequenceNum() uint32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

func (x *AppMessage_PlayAudioMessage) GetLastMessage() bool {
	if x != nil {
		return x.LastMessage
	}
	return false
}

// @@ Response back to FC from application instructing FC to clear the
// @@ contents of the audio buffer (i.e. any buffered audio which has
// @@ not yet been played to the call). All audio buffer contents at the
// @@ time of receipt of this message will be cleared, and FC will
// @@ respond back to application with a request
// @@ NotifyAudioBufferClearedMessage echoing the id passed in the
// @@ application's ClearAudioBufferMessage
type AppMessage_ClearAudioBufferMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage_ClearAudioBufferMessage) Reset() {
	*x = AppMessage_ClearAudioBufferMessage{}
	mi := &file_ivr_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_ClearAudioBufferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_ClearAudioBufferMessage) ProtoMessage() {}

func (x *AppMessage_ClearAudioBufferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_ClearAudioBufferMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_ClearAudioBufferMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AppMessage_ClearAudioBufferMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// @@ Response back to FC from application instructing FC to press a
// @@ DTMF digit on the call; the application generated unique id passed
// @@ in will be echoed back to application from FC in a subsequent
// @@ NotifyDTMFPressCompletedMessage request to the
// @@ application on this RPC stream
type AppMessage_PressDTMFMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @@ [0-9*#abcd]
	DtmfDigits string `protobuf:"bytes,2,opt,name=dtmf_digits,json=dtmfDigits,proto3" json:"dtmf_digits,omitempty"`
	// @@ duration in milliseconds to "press" a DTMF digit
	// @@ duration should be between 1 and 8000
	// @@ duration of 0 is invalid and will be ignored
	// @@ duration of >8000 would be reduced to 8000
	PressDurationMs uint32 `protobuf:"varint,3,opt,name=press_duration_ms,json=pressDurationMs,proto3" json:"press_duration_ms,omitempty"`
	// @@ duration in milliseconds to delay before pressing another digit
	BreakDurationMs uint32 `protobuf:"varint,4,opt,name=break_duration_ms,json=breakDurationMs,proto3" json:"break_duration_ms,omitempty"`
	SequenceNum     uint32 `protobuf:"varint,5,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppMessage_PressDTMFMessage) Reset() {
	*x = AppMessage_PressDTMFMessage{}
	mi := &file_ivr_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_PressDTMFMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_PressDTMFMessage) ProtoMessage() {}

func (x *AppMessage_PressDTMFMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_PressDTMFMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_PressDTMFMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AppMessage_PressDTMFMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppMessage_PressDTMFMessage) GetDtmfDigits() string {
	if x != nil {
		return x.DtmfDigits
	}
	return ""
}

func (x *AppMessage_PressDTMFMessage) GetPressDurationMs() uint32 {
	if x != nil {
		return x.PressDurationMs
	}
	return 0
}

func (x *AppMessage_PressDTMFMessage) GetBreakDurationMs() uint32 {
	if x != nil {
		return x.BreakDurationMs
	}
	return 0
}

func (x *AppMessage_PressDTMFMessage) GetSequenceNum() uint32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

// @@ Message back to FC from application instructing FC to return the
// @@ depth of the requested buffer
type AppMessage_QueryBufferDepthMessage struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	BufferType    AppMessage_QueryBufferDepthMessage_BufferType `protobuf:"varint,1,opt,name=buffer_type,json=bufferType,proto3,enum=freeclimb.AppMessage_QueryBufferDepthMessage_BufferType" json:"buffer_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage_QueryBufferDepthMessage) Reset() {
	*x = AppMessage_QueryBufferDepthMessage{}
	mi := &file_ivr_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_QueryBufferDepthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_QueryBufferDepthMessage) ProtoMessage() {}

func (x *AppMessage_QueryBufferDepthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_QueryBufferDepthMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_QueryBufferDepthMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AppMessage_QueryBufferDepthMessage) GetBufferType() AppMessage_QueryBufferDepthMessage_BufferType {
	if x != nil {
		return x.BufferType
	}
	return AppMessage_QueryBufferDepthMessage_DTMF
}

// @@ Response back to FC from application instructing FC to terminate
// @@ the call; upon terminating the call FC will deliver a final
// @@ NotifyCallEndedMessage request to application over this RPC stream
// @@ at which point both sides will tear down the stream and the
// @@ bidirectional streaming RPC is completed
type AppMessage_TerminateCallMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage_TerminateCallMessage) Reset() {
	*x = AppMessage_TerminateCallMessage{}
	mi := &file_ivr_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_TerminateCallMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_TerminateCallMessage) ProtoMessage() {}

func (x *AppMessage_TerminateCallMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_TerminateCallMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_TerminateCallMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 4}
}

// @@ UNIMPLEMENTED, DO NOT USE
type AppMessage_EndGrpcStreamMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// will override existing action url from initial AudioStream command
	ActionUrl     string `protobuf:"bytes,1,opt,name=action_url,json=actionUrl,proto3" json:"action_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage_EndGrpcStreamMessage) Reset() {
	*x = AppMessage_EndGrpcStreamMessage{}
	mi := &file_ivr_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage_EndGrpcStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage_EndGrpcStreamMessage) ProtoMessage() {}

func (x *AppMessage_EndGrpcStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ivr_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage_EndGrpcStreamMessage.ProtoReflect.Descriptor instead.
func (*AppMessage_EndGrpcStreamMessage) Descriptor() ([]byte, []int) {
	return file_ivr_proto_rawDescGZIP(), []int{1, 5}
}

func (x *AppMessage_EndGrpcStreamMessage) GetActionUrl() string {
	if x != nil {
		return x.ActionUrl
	}
	return ""
}

var File_ivr_proto protoreflect.FileDescriptor

const file_ivr_proto_rawDesc = "" +
	"\n" +
	"\tivr.proto\x12\tfreeclimb\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe6\x18\n" +
	"\x0fPlatformMessage\x12e\n" +
	"\x13notify_call_started\x18\x01 \x01(\v23.freeclimb.PlatformMessage.NotifyCallStartedMessageH\x00R\x11notifyCallStarted\x12[\n" +
	"\x11notify_audio_data\x18\x02 \x01(\v2-.freeclimb.PlatformMessage.NotifyAudioMessageH\x00R\x0fnotifyAudioData\x12\x83\x01\n" +
	"\x1fnotify_dtmf_received_start_data\x18\x03 \x01(\v2;.freeclimb.PlatformMessage.NotifyDTMFReceivedStartedMessageH\x00R\x1bnotifyDtmfReceivedStartData\x12}\n" +
	"\x1dnotify_dtmf_received_end_data\x18\x04 \x01(\v29.freeclimb.PlatformMessage.NotifyDTMFReceivedEndedMessageH\x00R\x19notifyDtmfReceivedEndData\x12\x7f\n" +
	"\x1cnotify_playback_started_data\x18\x05 \x01(\v2<.freeclimb.PlatformMessage.NotifyAudioPlaybackStartedMessageH\x00R\x19notifyPlaybackStartedData\x12\x85\x01\n" +
	"\x1enotify_playback_completed_data\x18\x06 \x01(\v2>.freeclimb.PlatformMessage.NotifyAudioPlaybackCompletedMessageH\x00R\x1bnotifyPlaybackCompletedData\x12w\n" +
	"\x19notify_audio_cleared_data\x18\a \x01(\v2:.freeclimb.PlatformMessage.NotifyAudioBufferClearedMessageH\x00R\x16notifyAudioClearedData\x12{\n" +
	"\x1dnotify_dtmf_play_started_data\x18\b \x01(\v27.freeclimb.PlatformMessage.NotifyDTMFPlayStartedMessageH\x00R\x19notifyDtmfPlayStartedData\x12\x81\x01\n" +
	"\x1fnotify_dtmf_play_completed_data\x18\t \x01(\v29.freeclimb.PlatformMessage.NotifyDTMFPlayCompletedMessageH\x00R\x1bnotifyDtmfPlayCompletedData\x12_\n" +
	"\x11notify_call_ended\x18\n" +
	" \x01(\v21.freeclimb.PlatformMessage.NotifyCallEndedMessageH\x00R\x0fnotifyCallEnded\x12R\n" +
	"\fnotify_error\x18\v \x01(\v2-.freeclimb.PlatformMessage.NotifyErrorMessageH\x00R\vnotifyError\x12Z\n" +
	"\rnotify_buffer\x18\f \x01(\v23.freeclimb.PlatformMessage.NotifyBufferDepthMessageH\x00R\fnotifyBuffer\x1a\xb5\x01\n" +
	"\x18NotifyCallStartedMessage\x12\x17\n" +
	"\acall_id\x18\x01 \x01(\tR\x06callId\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\x12\x1d\n" +
	"\n" +
	"is_inbound\x18\x04 \x01(\bR\tisInbound\x12\x1a\n" +
	"\bmetadata\x18\x05 \x03(\tR\bmetadata\x12!\n" +
	"\fcontent_type\x18\x06 \x01(\tR\vcontentType\x1a\xdc\x01\n" +
	"\x12NotifyAudioMessage\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\fR\taudioData\x12=\n" +
	"\fstart_tstamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vstartTstamp\x129\n" +
	"\n" +
	"end_tstamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tendTstamp\x12!\n" +
	"\fsequence_num\x18\x06 \x01(\rR\vsequenceNumJ\x04\b\x02\x10\x03J\x04\b\x05\x10\x06\x1aw\n" +
	" NotifyDTMFReceivedStartedMessage\x12\x14\n" +
	"\x05digit\x18\x01 \x01(\tR\x05digit\x12=\n" +
	"\fstart_tstamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vstartTstamp\x1aq\n" +
	"\x1eNotifyDTMFReceivedEndedMessage\x12\x14\n" +
	"\x05digit\x18\x01 \x01(\tR\x05digit\x129\n" +
	"\n" +
	"end_tstamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tendTstamp\x1a\xd5\x01\n" +
	"\x18NotifyBufferDepthMessage\x12_\n" +
	"\vbuffer_type\x18\x01 \x01(\x0e2>.freeclimb.PlatformMessage.NotifyBufferDepthMessage.BufferTypeR\n" +
	"bufferType\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\rR\x05depth\x12\x1f\n" +
	"\vbuffer_size\x18\x03 \x01(\rR\n" +
	"bufferSize\"!\n" +
	"\n" +
	"BufferType\x12\b\n" +
	"\x04DTMF\x10\x00\x12\t\n" +
	"\x05Audio\x10\x01\x1a\x96\x02\n" +
	"\x16NotifyCallEndedMessage\x12\x17\n" +
	"\acall_id\x18\x01 \x01(\tR\x06callId\x12]\n" +
	"\vreason_code\x18\x02 \x01(\x0e2<.freeclimb.PlatformMessage.NotifyCallEndedMessage.ReasonCodeR\n" +
	"reasonCode\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"l\n" +
	"\n" +
	"ReasonCode\x12\x15\n" +
	"\x11CALLER_DISCONNECT\x10\x00\x12\x1a\n" +
	"\x16APPLICATION_DISCONNECT\x10\x01\x12\x17\n" +
	"\x13PLATFORM_DISCONNECT\x10\x02\x12\x12\n" +
	"\x0ePLATFORM_ERROR\x10\x03\x1am\n" +
	"!NotifyAudioPlaybackStartedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1ao\n" +
	"#NotifyAudioPlaybackCompletedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1ak\n" +
	"\x1fNotifyAudioBufferClearedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1ah\n" +
	"\x1cNotifyDTMFPlayStartedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1aj\n" +
	"\x1eNotifyDTMFPlayCompletedMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1aT\n" +
	"\x12NotifyErrorMessage\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12\x19\n" +
	"\berror_id\x18\x02 \x01(\tR\aerrorIdB\t\n" +
	"\apayload\"\x84\t\n" +
	"\n" +
	"AppMessage\x12G\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\v2&.freeclimb.AppMessage.PlayAudioMessageH\x00R\taudioData\x12]\n" +
	"\x12clear_audio_buffer\x18\x02 \x01(\v2-.freeclimb.AppMessage.ClearAudioBufferMessageH\x00R\x10clearAudioBuffer\x12E\n" +
	"\tdtmf_data\x18\x03 \x01(\v2&.freeclimb.AppMessage.PressDTMFMessageH\x00R\bdtmfData\x12S\n" +
	"\x0eterminate_call\x18\x04 \x01(\v2*.freeclimb.AppMessage.TerminateCallMessageH\x00R\rterminateCall\x12K\n" +
	"\n" +
	"end_stream\x18\x05 \x01(\v2*.freeclimb.AppMessage.EndGrpcStreamMessageH\x00R\tendStream\x12R\n" +
	"\fquery_buffer\x18\x06 \x01(\v2-.freeclimb.AppMessage.QueryBufferDepthMessageH\x00R\vqueryBuffer\x1a\xb0\x01\n" +
	"\x10PlayAudioMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fR\taudioData\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12!\n" +
	"\fsequence_num\x18\x05 \x01(\rR\vsequenceNum\x12!\n" +
	"\flast_message\x18\x06 \x01(\bR\vlastMessageJ\x04\b\x04\x10\x05\x1a)\n" +
	"\x17ClearAudioBufferMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x1a\xbe\x01\n" +
	"\x10PressDTMFMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vdtmf_digits\x18\x02 \x01(\tR\n" +
	"dtmfDigits\x12*\n" +
	"\x11press_duration_ms\x18\x03 \x01(\rR\x0fpressDurationMs\x12*\n" +
	"\x11break_duration_ms\x18\x04 \x01(\rR\x0fbreakDurationMs\x12!\n" +
	"\fsequence_num\x18\x05 \x01(\rR\vsequenceNum\x1a\x97\x01\n" +
	"\x17QueryBufferDepthMessage\x12Y\n" +
	"\vbuffer_type\x18\x01 \x01(\x0e28.freeclimb.AppMessage.QueryBufferDepthMessage.BufferTypeR\n" +
	"bufferType\"!\n" +
	"\n" +
	"BufferType\x12\b\n" +
	"\x04DTMF\x10\x00\x12\t\n" +
	"\x05Audio\x10\x01\x1a\x16\n" +
	"\x14TerminateCallMessage\x1a5\n" +
	"\x14EndGrpcStreamMessage\x12\x1d\n" +
	"\n" +
	"action_url\x18\x01 \x01(\tR\tactionUrlB\t\n" +
	"\apayload2[\n" +
	"\x11GRPCStreamService\x12F\n" +
	"\vSendIVRData\x12\x1a.freeclimb.PlatformMessage\x1a\x15.freeclimb.AppMessage\"\x00(\x010\x01B*\n" +
	"\x11com.freeclimb.ivrZ\x12../examples/go;ivr\x88\x01\x01b\x06proto3"

var (
	file_ivr_proto_rawDescOnce sync.Once
	file_ivr_proto_rawDescData []byte
)

func file_ivr_proto_rawDescGZIP() []byte {
	file_ivr_proto_rawDescOnce.Do(func() {
		file_ivr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ivr_proto_rawDesc), len(file_ivr_proto_rawDesc)))
	})
	return file_ivr_proto_rawDescData
}

var file_ivr_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ivr_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_ivr_proto_goTypes = []any{
	(PlatformMessage_NotifyBufferDepthMessage_BufferType)(0),    // 0: freeclimb.PlatformMessage.NotifyBufferDepthMessage.BufferType
	(PlatformMessage_NotifyCallEndedMessage_ReasonCode)(0),      // 1: freeclimb.PlatformMessage.NotifyCallEndedMessage.ReasonCode
	(AppMessage_QueryBufferDepthMessage_BufferType)(0),          // 2: freeclimb.AppMessage.QueryBufferDepthMessage.BufferType
	(*PlatformMessage)(nil),                                     // 3: freeclimb.PlatformMessage
	(*AppMessage)(nil),                                          // 4: freeclimb.AppMessage
	(*PlatformMessage_NotifyCallStartedMessage)(nil),            // 5: freeclimb.PlatformMessage.NotifyCallStartedMessage
	(*PlatformMessage_NotifyAudioMessage)(nil),                  // 6: freeclimb.PlatformMessage.NotifyAudioMessage
	(*PlatformMessage_NotifyDTMFReceivedStartedMessage)(nil),    // 7: freeclimb.PlatformMessage.NotifyDTMFReceivedStartedMessage
	(*PlatformMessage_NotifyDTMFReceivedEndedMessage)(nil),      // 8: freeclimb.PlatformMessage.NotifyDTMFReceivedEndedMessage
	(*PlatformMessage_NotifyBufferDepthMessage)(nil),            // 9: freeclimb.PlatformMessage.NotifyBufferDepthMessage
	(*PlatformMessage_NotifyCallEndedMessage)(nil),              // 10: freeclimb.PlatformMessage.NotifyCallEndedMessage
	(*PlatformMessage_NotifyAudioPlaybackStartedMessage)(nil),   // 11: freeclimb.PlatformMessage.NotifyAudioPlaybackStartedMessage
	(*PlatformMessage_NotifyAudioPlaybackCompletedMessage)(nil), // 12: freeclimb.PlatformMessage.NotifyAudioPlaybackCompletedMessage
	(*PlatformMessage_NotifyAudioBufferClearedMessage)(nil),     // 13: freeclimb.PlatformMessage.NotifyAudioBufferClearedMessage
	(*PlatformMessage_NotifyDTMFPlayStartedMessage)(nil),        // 14: freeclimb.PlatformMessage.NotifyDTMFPlayStartedMessage
	(*PlatformMessage_NotifyDTMFPlayCompletedMessage)(nil),      // 15: freeclimb.PlatformMessage.NotifyDTMFPlayCompletedMessage
	(*PlatformMessage_NotifyErrorMessage)(nil),                  // 16: freeclimb.PlatformMessage.NotifyErrorMessage
	(*AppMessage_PlayAudioMessage)(nil),                         // 17: freeclimb.AppMessage.PlayAudioMessage
	(*AppMessage_ClearAudioBufferMessage)(nil),                  // 18: freeclimb.AppMessage.ClearAudioBufferMessage
	(*AppMessage_PressDTMFMessage)(nil),                         // 19: freeclimb.AppMessage.PressDTMFMessage
	(*AppMessage_QueryBufferDepthMessage)(nil),                  // 20: freeclimb.AppMessage.QueryBufferDepthMessage
	(*AppMessage_TerminateCallMessage)(nil),                     // 21: freeclimb.AppMessage.TerminateCallMessage
	(*AppMessage_EndGrpcStreamMessage)(nil),                     // 22: freeclimb.AppMessage.EndGrpcStreamMessage
	(*timestamppb.Timestamp)(nil),                               // 23: google.protobuf.Timestamp
}
var file_ivr_proto_depIdxs = []int32{
	5,  // 0: freeclimb.PlatformMessage.notify_call_started:type_name -> freeclimb.PlatformMessage.NotifyCallStartedMessage
	6,  // 1: freeclimb.PlatformMessage.notify_audio_data:type_name -> freeclimb.PlatformMessage.NotifyAudioMessage
	7,  // 2: freeclimb.PlatformMessage.notify_dtmf_received_start_data:type_name -> freeclimb.PlatformMessage.NotifyDTMFReceivedStartedMessage
	8,  // 3: freeclimb.PlatformMessage.notify_dtmf_received_end_data:type_name -> freeclimb.PlatformMessage.NotifyDTMFReceivedEndedMessage
	11, // 4: freeclimb.PlatformMessage.notify_playback_started_data:type_name -> freeclimb.PlatformMessage.NotifyAudioPlaybackStartedMessage
	12, // 5: freeclimb.PlatformMessage.notify_playback_completed_data:type_name -> freeclimb.PlatformMessage.NotifyAudioPlaybackCompletedMessage
	13, // 6: freeclimb.PlatformMessage.notify_audio_cleared_data:type_name -> freeclimb.PlatformMessage.NotifyAudioBufferClearedMessage
	14, // 7: freeclimb.PlatformMessage.notify_dtmf_play_started_data:type_name -> freeclimb.PlatformMessage.NotifyDTMFPlayStartedMessage
	15, // 8: freeclimb.PlatformMessage.notify_dtmf_play_completed_data:type_name -> freeclimb.PlatformMessage.NotifyDTMFPlayCompletedMessage
	10, // 9: freeclimb.PlatformMessage.notify_call_ended:type_name -> freeclimb.PlatformMessage.NotifyCallEndedMessage
	16, // 10: freeclimb.PlatformMessage.notify_error:type_name -> freeclimb.PlatformMessage.NotifyErrorMessage
	9,  // 11: freeclimb.PlatformMessage.notify_buffer:type_name -> freeclimb.PlatformMessage.NotifyBufferDepthMessage
	17, // 12: freeclimb.AppMessage.audio_data:type_name -> freeclimb.AppMessage.PlayAudioMessage
	18, // 13: freeclimb.AppMessage.clear_audio_buffer:type_name -> freeclimb.AppMessage.ClearAudioBufferMessage
	19, // 14: freeclimb.AppMessage.dtmf_data:type_name -> freeclimb.AppMessage.PressDTMFMessage
	21, // 15: freeclimb.AppMessage.terminate_call:type_name -> freeclimb.AppMessage.TerminateCallMessage
	22, // 16: freeclimb.AppMessage.end_stream:type_name -> freeclimb.AppMessage.EndGrpcStreamMessage
	20, // 17: freeclimb.AppMessage.query_buffer:type_name -> freeclimb.AppMessage.QueryBufferDepthMessage
	23, // 18: freeclimb.PlatformMessage.NotifyAudioMessage.start_tstamp:type_name -> google.protobuf.Timestamp
	23, // 19: freeclimb.PlatformMessage.NotifyAudioMessage.end_tstamp:type_name -> google.protobuf.Timestamp
	23, // 20: freeclimb.PlatformMessage.NotifyDTMFReceivedStartedMessage.start_tstamp:type_name -> google.protobuf.Timestamp
	23, // 21: freeclimb.PlatformMessage.NotifyDTMFReceivedEndedMessage.end_tstamp:type_name -> google.protobuf.Timestamp
	0,  // 22: freeclimb.PlatformMessage.NotifyBufferDepthMessage.buffer_type:type_name -> freeclimb.PlatformMessage.NotifyBufferDepthMessage.BufferType
	1,  // 23: freeclimb.PlatformMessage.NotifyCallEndedMessage.reason_code:type_name -> freeclimb.PlatformMessage.NotifyCallEndedMessage.ReasonCode
	23, // 24: freeclimb.PlatformMessage.NotifyAudioPlaybackStartedMessage.timestamp:type_name -> google.protobuf.Timestamp
	23, // 25: freeclimb.PlatformMessage.NotifyAudioPlaybackCompletedMessage.timestamp:type_name -> google.protobuf.Timestamp
	23, // 26: freeclimb.PlatformMessage.NotifyAudioBufferClearedMessage.timestamp:type_name -> google.protobuf.Timestamp
	23, // 27: freeclimb.PlatformMessage.NotifyDTMFPlayStartedMessage.timestamp:type_name -> google.protobuf.Timestamp
	23, // 28: freeclimb.PlatformMessage.NotifyDTMFPlayCompletedMessage.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 29: freeclimb.AppMessage.QueryBufferDepthMessage.buffer_type:type_name -> freeclimb.AppMessage.QueryBufferDepthMessage.BufferType
	3,  // 30: freeclimb.GRPCStreamService.SendIVRData:input_type -> freeclimb.PlatformMessage
	4,  // 31: freeclimb.GRPCStreamService.SendIVRData:output_type -> freeclimb.AppMessage
	31, // [31:32] is the sub-list for method output_type
	30, // [30:31] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_ivr_proto_init() }
func file_ivr_proto_init() {
	if File_ivr_proto != nil {
		return
	}
	file_ivr_proto_msgTypes[0].OneofWrappers = []any{
		(*PlatformMessage_NotifyCallStarted)(nil),
		(*PlatformMessage_NotifyAudioData)(nil),
		(*PlatformMessage_NotifyDtmfReceivedStartData)(nil),
		(*PlatformMessage_NotifyDtmfReceivedEndData)(nil),
		(*PlatformMessage_NotifyPlaybackStartedData)(nil),
		(*PlatformMessage_NotifyPlaybackCompletedData)(nil),
		(*PlatformMessage_NotifyAudioClearedData)(nil),
		(*PlatformMessage_NotifyDtmfPlayStartedData)(nil),
		(*PlatformMessage_NotifyDtmfPlayCompletedData)(nil),
		(*PlatformMessage_NotifyCallEnded)(nil),
		(*PlatformMessage_NotifyError)(nil),
		(*PlatformMessage_NotifyBuffer)(nil),
	}
	file_ivr_proto_msgTypes[1].OneofWrappers = []any{
		(*AppMessage_AudioData)(nil),
		(*AppMessage_ClearAudioBuffer)(nil),
		(*AppMessage_DtmfData)(nil),
		(*AppMessage_TerminateCall)(nil),
		(*AppMessage_EndStream)(nil),
		(*AppMessage_QueryBuffer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ivr_proto_rawDesc), len(file_ivr_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ivr_proto_goTypes,
		DependencyIndexes: file_ivr_proto_depIdxs,
		EnumInfos:         file_ivr_proto_enumTypes,
		MessageInfos:      file_ivr_proto_msgTypes,
	}.Build()
	File_ivr_proto = out.File
	file_ivr_proto_goTypes = nil
	file_ivr_proto_depIdxs = nil
}
